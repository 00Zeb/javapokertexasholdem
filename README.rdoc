== It's a Java SE implemention for Texas Hold'em Video Poker  (using TDD JUnit)

You can see the Texas Hold'em Video Poker implementation in action on
http://pablocantero.com/javapokertexasholdem-demo/ 

The javapokertexasholdem-demo is not part of this implemetation, it's a external project

The Texas Hold'em Video Poker implementation is only a 'core engine' without presentation tier

My suggest is to use this project like a library, if your system use other types of card or game flow, the best way is encapsulate this implementation in Adaptar, Decorator, Proxy or other design patterns 

=== Check out the following example

	GameTexasHoldem game = new GameTexasHoldem();
	game.newGame();
	game.deal();
	game.callFlop();
	game.betRiver();
	game.betTurn();
	GameEnum result = game.getWinner();
	
	//To see the cards/hand
	//game.getTableCards(); 
	//game.getPlayer().getCards();
	//game.getDealer().getCards();
	
	//To see the ranking
	//player.getRankingEnum();
	//dealer.getRankingEnum();

The game.getWinner() method returns GameEnum that contains the result of the game

	public enum GameEnum {
		PLAYER_WINNER, 
		DEALER_WINNER, 
		DRAW_GAME, 
		PLAYER_WINNER_BEST_RANKING, 
		DEALER_WINNER_BEST_RANKING, 
		PLAYER_WINNER_HIGH_CARD, 
		DEALER_WINNER_HIGH_CARD
	}

The Player.getRankingEnum() method returns RankingEnum that contains the ranking of the player/dealer
	
	public static enum RankingEnum {
		ROYAL_FLUSH, 
		STRAIGHT_FLUSH, 
		FOUR_OF_A_KIND, 
		FULL_HOUSE, 
		FLUSH, 
		STRAIGHT, 
		THREE_OF_A_KIND, 
		TWO_PAIR, 
		ONE_PAIR, 
		HIGH_CARD
	} 

=== Performance test

* Macbook pro
* HD ATA de 320 GB (5.400 rpm)
* Memory 4GB 1066MHz DDR3 SDRAM - 2x2GB
* Processor 2.53GHz Intel Core 2 Duo
* O.S. Snow Leopard
* 100000 executions = 10 seconds
* 10000 executions = 2 seconds